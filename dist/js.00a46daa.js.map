{"version":3,"sources":["js/upload.js","js/index.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","button","download","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","handler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","downloadHandler","querySelectorAll","addEventListener","click","inUpload"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (!bytes) {\r\n        return '0 Byte'\r\n    }\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n }\r\n\r\n const element = (tag, classes = [], content) => {\r\n    const node = document.createElement(tag)\r\n\r\n    if (classes.length){\r\n        node.classList.add(...classes)\r\n    }\r\n\r\n    if (content){\r\n        node.textContent = content\r\n    }\r\n    return node\r\n }\r\n\r\n function noop(){}\r\n\r\nexport function upload(selector, options = {}){\r\n    let files = []\r\n\r\n    const upload = options.onUpload() ?? noop()\r\n    const input = document.querySelector(selector);\r\n    const preview = element('div', ['preview'])\r\n\r\n    const button = element('button', ['btn', 'primary'], 'upload')\r\n    const download = element('button', ['btn'], 'download')\r\n    download.style.display = 'none';\r\n\r\n    if(options.multi){\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if (options.accept && Array.isArray(options.accept)){\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', button)\r\n    input.insertAdjacentElement('afterend', download)\r\n    \r\n    const handler = event =>{\r\n        if (!event.target.files.length){\r\n            return;\r\n        }\r\n        files = Array.from(event.target.files)\r\n\r\n        preview.innerHTML = ''\r\n        download.style.display = 'inline'\r\n\r\n        files.forEach(file =>{\r\n            if (!file.type.match('image')){\r\n                return;\r\n            }\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = event => {\r\n                const src = event.target.result\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                <div class=\"preview-image\">\r\n                <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                    <img src=\"${src}\" alt=\"${file.name}\"/>\r\n                <div class=\"preview-info\">\r\n                    <span>${file.name}</span>\r\n                    ${bytesToSize(file.size)}\r\n                </div>\r\n                </div>`)\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        if (!event.target.dataset.name){\r\n            return;\r\n        }\r\n        const {name} = event.target.dataset\r\n        files = files.filter(file => file.name !== name)\r\n\r\n        if (!file.length){\r\n            download.style.display = 'none';\r\n        }\r\n\r\n        const block = preview.querySelector(`[data-name=\"${name}\"]`).closest('.preview-image')\r\n\r\n        block.classList.add('removing')\r\n        setTimeout(() => {\r\n            block.remove()\r\n        }, 300)\r\n    }\r\n\r\n    const downloadHandler = () => {\r\n        preview.querySelectorAll('.preview-remove').forEach(element => element.remove())\r\n        onUpload(files)\r\n    }\r\n\r\n    button.addEventListener('click', () => input.click())\r\n    download.addEventListener('click', () => downloadHandler)\r\n    input.addEventListener('change', handler)\r\n    preview.addEventListener('click', removeHandler)\r\n}","import {upload} from './upload.js'\r\n\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', ',gif'],\r\n    inUpload(files){\r\n\r\n    }\r\n})"]}